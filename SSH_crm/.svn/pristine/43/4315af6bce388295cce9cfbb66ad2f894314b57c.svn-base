package com.zzz.crm.customer.dao;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.Hibernate;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Projections;
import org.hibernate.criterion.Restrictions;
import org.springframework.orm.hibernate5.HibernateTemplate;
import org.springframework.orm.hibernate5.support.HibernateDaoSupport;

import com.zzz.crm.customer.entity.Customer;

public class CustomerDaoMysqlImpl extends HibernateDaoSupport implements CustomerDao {

	/**
	 * 添加客户
	 */
	public void add(Customer customer) {
		HibernateTemplate template = this.getHibernateTemplate();
		template.save(customer);
	}

	/**
	 * 根据客户名称查找客户
	 */
	public Customer findCustomerByCustName(String custName) {
		HibernateTemplate template = this.getHibernateTemplate();
		List<Customer> list = (List<Customer>) template.find("from Customer where custName=?", custName);
		if(list.size() == 0) {
			return null;
		}
		return list.get(0);
	}

	/**
	 * 查询所有客户
	 */
	public List<Customer> findAllCustomer() {
		HibernateTemplate template = this.getHibernateTemplate();
		List<Customer> customerList = (List<Customer>) template.find("from Customer");
		return customerList;
	}

	/**
	 * 根据客户id查找客户
	 */
	public Customer findCustomerByCid(Integer cid) {
		HibernateTemplate template = this.getHibernateTemplate();
		Customer customer = template.get(Customer.class, cid);
		return customer;
	}

	/**
	 * 编辑客户
	 */
	public void update(Customer customer) {
		HibernateTemplate template = this.getHibernateTemplate();
		template.update(customer);
	}

	/**
	 * 删除客户
	 */
	public void delete(Integer cid) {
		HibernateTemplate template = this.getHibernateTemplate();
		Customer customer = template.get(Customer.class, cid);
		template.delete(customer);
	}

	/**
	 * 查询总记录数
	 */
	public int findTotalCount(String cname) {
		HibernateTemplate template = this.getHibernateTemplate();
		DetachedCriteria criteria = DetachedCriteria.forClass(Customer.class);
		criteria.setProjection(Projections.rowCount());
		criteria.add(Restrictions.like("custName","%" + cname + "%"));
		System.out.println(template.findByCriteria(criteria));
		List<Long> list = (List<Long>) template.findByCriteria(criteria);
		if(list != null && list.size() > 0) {
			long l = list.get(0);
			int totalCount = (int) l;
			return totalCount;
		} else {
			return 0;
		}
	}

	/**
	 * 查询每页记录
	 */
	public List<Customer> findCustomerPageList(String cname, int begin,int pageSize) {
		HibernateTemplate template = this.getHibernateTemplate();
		DetachedCriteria criteria = DetachedCriteria.forClass(Customer.class);
		criteria.add(Restrictions.like("custName", "%" + cname + "%"));
		List<Customer> list = (List<Customer>) template.findByCriteria(criteria, begin, pageSize);
		return list;
	}


}
